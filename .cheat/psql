# psql is the PostgreSQL terminal interface. The following commands were tested on version 9.5.
# Connection options:
# -U username (if not specified current OS user is used).
# -p port.
# -h server hostname/address.

psql -U postgres -h serverAddress -d dbName                             # Connect to a specific database:
psql -U postgres -h serverAddress --list                                # Get databases on a server:
psql -U postgres -d dbName -c 'select * from tableName;' -o fileName    # Execute sql query and save output to file:
psql -U postgres -d dbName -H -c 'select * from tableName;'             # Execute query and get tabular html output:
psql -U postgres -d dbName -t -A -P fieldsep=',' -c 'select * from tableName;' -o fileName.csv # Execute query and save resulting rows to csv file:
psql -f fileName                                                        # Read commands from file:
psql -f fileName.backup postgres                                        # Restore databases from file:

# create db and user:
CREATE DATABASE yourdbname;
CREATE USER youruser WITH ENCRYPTED PASSWORD 'yourpass';
GRANT ALL PRIVILEGES ON DATABASE yourdbname TO youruser;

# connect via socket
psql "user=someUser host=/path/to/sock/dir" -w # -w means not to ask for pass, but can provide in a ~/.pgpass file, user must match
psql -U postgres -h /path/to/socket/dir -w

# connection options
https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNECT-PASSFILE

# commands once logged in
http://www.postgresonline.com/special_feature.php?sf_name=postgresql83_psql_cheatsheet&outputformat=html

\l      # List databases
\dt     # List / Describe tables
\dt *s* # Describe tables containing 's'
\du     # List users

# backup entire database instance
pg_dumpall > <file>


# backup single database
pg_dump <dbname> > <file> [| gzip > <file>.gz]

# restore single db
gunzip -c file.gz | psql <dbname>

# restore from sql file
psql -f <file> [postgres]
